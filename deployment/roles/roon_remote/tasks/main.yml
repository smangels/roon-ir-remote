---

- name: Debug - zone name
  debug:
    msg: "{{ vars }}"

- name: Create a group
  group:
    name: "{{ service.group }}"
    state: present

- name: Create a user
  user:
    name: "{{ service.user }}"
    comment: Roon Remote User
    groups: "{{ service.groups }}"

- name: Apt Upgrade
  apt: upgrade=dist force_apt_get=yes
  tags:
    - never
    - upgrade

- name: Apt Update, reboot
  reboot:
    msg: "Reboot initiated"
    connect_timeout: 5
    reboot_timeout: 300
    post_reboot_delay: 30
    test_command: uptime
  tags:
    - never
    - upgrade

- name: Ensure service has been stopped
  ignore_errors: yes
  systemd:
    name: "{{ service.name }}.service"
    state: stopped
    enabled: false

- name: Cleanup the APP folder
  delegate_to: localhost
  file:
    state: absent
    path: "../app/__pycache__/"

- name: Create a folder
  tags: sebman
  file:
    state: directory
    path: "{{ installation.folder }}/app/"
    owner: "{{ service.user }}"
    group: "{{ service.group }}"
    mode: 0750

- name: Flirc copy configuration file
  tags:
    - flirc_util_config
  ansible.builtin.copy:
    src: "files/{{ inventory_hostname }}.fcfg"
    dest: "{{ installation.folder }}"
    mode: "0666"
    owner: "{{ service.user }}"
    group: "{{ service.group }}"

- name: Flirc load configuration
  tags:
    - flirc_util_config
  shell: "flirc_util loadconfig {{ installation.folder }}/{{ inventory_hostname }}.fcfg"
  register: flirc_load_config
  changed_when: False
  failed_when: flirc_load_config.rc != 0

- name: Transfer the code
  copy:
    src: "{{ item.src }}"
    dest: "{{ installation.folder }}/{{ item.dest }}"
    owner: "{{ service.user }}"
    group: "{{ service.group }}"
    mode: "750"
  loop:
    - { src: '../app/', dest: 'app/' }
    - { src: '../roon_remote.py', dest: 'roon_remote.py' }

- name: Generate template
  tags: generate_template
  template:
    dest: "{{ installation.folder }}/app_info.json"
    src: "app_info.json.j2"
    owner: "{{ service.user }}"
    group: "{{ service.group }}"
    mode: '770'

- name: PIP install required packages
  tags:
    - pip
  pip:
    executable: pip3
    name: [ 'roonapi', 'evdev' ]
    state: present

- name: Copy systemd service file
  copy:
    src: "{{ service.name }}.service"
    dest: "/etc/systemd/system/{{ service.name }}.service"

- name: Enable and start the service
  systemd:
    name: "{{ service.name }}.service"
    daemon_reload: true
    enabled: true
    state: started
